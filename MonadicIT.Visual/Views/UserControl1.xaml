<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="clr-namespace:MonadicIT.Visual.Controls"
    mc:Ignorable="d"
    x:Class="MonadicIT.Visual.UserControl1"
    x:Name="UserControl"
    d:DesignWidth="146" d:DesignHeight="480">
    <UserControl.Resources>
        <Style x:Key="InformationBorderStyle" TargetType="{x:Type Border}">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Background" Value="#EDEDED" />
            <Setter Property="BorderBrush" Value="#6C6C6C" />
            <Setter Property="BorderThickness" Value="1" />
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true"
                                   Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                   StrokeThickness="1" StrokeDashArray="1 2" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD" />
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070" />
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD" />
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1" />
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6" />
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B" />
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4" />
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5" />
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383" />
        <Style x:Key="ToggleButtonStyle1" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <ControlTemplate.Resources>
                            <Style TargetType="{x:Type Line}">
                                <Setter Property="Stroke" Value="DimGray" />
                                <Setter Property="StrokeDashArray" Value="5" />
                                <Setter Property="StrokeThickness" Value="1" />
                            </Style>
                            <Style x:Key="BorderButtonStyle" TargetType="{x:Type Border}">
                                <Setter Property="Height" Value="150" />
                                <Setter Property="Width"
                                        Value="{Binding Path=(controls:TransmissionLayer.Width), RelativeSource={RelativeSource TemplatedParent}}" />
                                <Setter Property="Background"
                                        Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" />
                                <Setter Property="BorderBrush"
                                        Value="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                                <Setter Property="BorderThickness"
                                        Value="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}" />
                                <Setter Property="CornerRadius" Value="10" />
                                <Setter Property="HorizontalAlignment"
                                        Value="{Binding HorizontalAlignment, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Style>
                            <Style x:Key="TextBlockStyle" TargetType="{x:Type TextBlock}">
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="HorizontalAlignment" Value="Center" />
                            </Style>
                        </ControlTemplate.Resources>

                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <Grid x:Name="LayoutRoot" Background="Black">
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <controls:ConnectingLine From="{Binding ElementName=Top}"
                                                         To="{Binding ElementName=Bottom}" Grid.RowSpan="3"
                                                         IsHitTestVisible="False" />

                                <Border Grid.Row="1" Style="{StaticResource InformationBorderStyle}"
                                        Width="{Binding (controls:TransmissionLayer.Width), RelativeSource={RelativeSource TemplatedParent}}">
                                    <TextBlock
                                        Text="{Binding (controls:TransmissionLayer.Description), RelativeSource={RelativeSource TemplatedParent}}"
                                        TextWrapping="Wrap" TextAlignment="Justify" Margin="10" />
                                </Border>

                                <Border x:Name="Top" Grid.Row="0" Style="{StaticResource BorderButtonStyle}">
                                    <TextBlock
                                        Text="{Binding (controls:TransmissionLayer.TopText), RelativeSource={RelativeSource TemplatedParent}}"
                                        Style="{StaticResource TextBlockStyle}" />
                                </Border>

                                <Border x:Name="Bottom" Grid.Row="2" Style="{StaticResource BorderButtonStyle}">
                                    <TextBlock
                                        Text="{Binding (controls:TransmissionLayer.BottomText), RelativeSource={RelativeSource TemplatedParent}}"
                                        Style="{StaticResource TextBlockStyle}" />
                                </Border>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border"
                                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border"
                                        Value="{StaticResource Button.MouseOver.Background}" />
                                <Setter Property="BorderBrush" TargetName="border"
                                        Value="{StaticResource Button.MouseOver.Border}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border"
                                        Value="{StaticResource Button.Pressed.Background}" />
                                <Setter Property="BorderBrush" TargetName="border"
                                        Value="{StaticResource Button.Pressed.Border}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border"
                                        Value="{StaticResource Button.Disabled.Background}" />
                                <Setter Property="BorderBrush" TargetName="border"
                                        Value="{StaticResource Button.Disabled.Border}" />
                                <Setter Property="TextElement.Foreground" TargetName="LayoutRoot"
                                        Value="{StaticResource Button.Disabled.Foreground}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <ToggleButton Style="{DynamicResource ToggleButtonStyle1}" Background="#FFEFF6FF" BorderBrush="#FF3F89FF"
                  BorderThickness="2"
                  Grid.Row="0" Grid.Column="0" HorizontalAlignment="Left" Margin="5,0,5,0" Width="100"
                  controls:TransmissionLayer.Width="100" controls:TransmissionLayer.TopText="Source"
                  controls:TransmissionLayer.BottomText="Sink"
                  controls:TransmissionLayer.Description="Responsible for emitting symbols carrying information. Adjust their distribution here." />
</UserControl>